#include <stdio.h>
#include <windows.h>
#include "TADColaEst.h"
#include "dibujarCajas.h"

int vacio(int q);

#define Tiempobase 10 //Tiempo base base del problema
#define impresion 20 // cada 20 se imprimira los nuevo usuarios

void main()
{
	elemento e, e1, e2;
	cola preferentes;
	Initialize(&preferentes);
	cola usuarios;
	Initialize(&usuarios);
	cola clientes;
	Initialize(&clientes);
	int i, cajeras, Tiempocliente[3];
	unsigned int base_time = 0;



//NÃºmero de cajeros que atienden
	system("cls");
	cajeras = pedirDatos();

	system("cls");
	// 0 = Clientes, 1 = Usuarios, 2 = Preferentes;
	printf("Ingrese el tiempo de llegada de clientes (s): ");
	scanf("%d", &Tiempocliente[0]);

	printf("Ingrese el tiempo de llegada de usuarios (s): ");
	scanf("%d", &Tiempocliente[1]);

	printf("Ingrese el tiempo de llegada de preferentes (s): ");
	scanf("%d", &Tiempocliente[2]);

	int Tiempocajero[cajeras];
	int cajerovacio[cajeras];

/*for (i = 0; i < cajeras; ++i)
{
	cajerovacio[i] = 0;
}*/   //A eliminar

	int c = 0, p = 0, u = 0;		//auxiliares para clientes
	int Pa = 0, Ua = 0;				//auxiliares para clientes

 //Inicializamos cajeros y pedimos el tiempo de cada uno
	for(i=0; i < cajeras; i++)
	{
		printf("Ingrese el tiempo del cajero %d", i+1);
		scanf("%d", &Tiempocajero[i]);
	}

	system("cls");
	Cajas(cajeras);
	while(1){
	
		Sleep(Tiempobase);
		base_time++;

		//atencion de clientes
		for(i=0; i < cajeras; i++)
		{
			if(base_time % Tiempocajero[i] == 0)
			{
				cajerovacio[i] = 0;
				if(Pa < 3 && !Empty(&preferentes))
				{
					e1 = Dequeue(&preferentes);
					Pa++;
					cajerovacio[i] = e1.n;
					PasarAcaja(i);
					printf("P%d", e1.tipoP);
				}
				else
					if((!Empty(&usuarios) && Ua < 2) || (!Empty(&usuarios) && vacio(cajerovacio[i]) == 1))
					{
						e1 = Dequeue(&usuarios);
						Ua++;
						cajerovacio[i] = e1.n;
						PasarAcaja(i);
						printf("U%d", e1.tipoU);
					}
					else
						if ((!Empty(&clientes) && Pa+Ua == 5) || (!Empty(&clientes) && vacio(cajerovacio[i]) == 1))
						{
							e1 = Dequeue(&clientes);
							PasarAcaja(i);
							printf("C%d", e1.tipoC);
							Pa = 0;
							Ua = 0;
						}
			}
		}
		// Tiempocliente[0] = Clientes, Tiempocliente[1] = Usuarios, Tiempocliente[2] = Preferentes;
		// Encolamos a los visitantes
		if(base_time % Tiempocliente[0] == 0)
		{
			c++;
			e.tipoC = c;
			e.n = 0;
			Queue(&clientes, e);
		}

		if (base_time % Tiempocliente[1] == 0)
		{
			u++;
			e.tipoU = u;
			e.n = 1;
			Queue(&usuarios, e);
		}

		if (base_time % Tiempocliente[2] == 0)
		{
			p++;
			e.tipoP = p;
			e.n = 2;
			Queue(&preferentes, e);
		}
		//Fin del encolamiento

		//impresion de las colas
		if(base_time % impresion == 0)
		{	
			for(i=1; i <= Size(&preferentes); i++)
			{
				e2 = Element(&preferentes, i);
				gotoxy(40,20+i);
				printf("P%d", e2.tipoP);
			}

			for(i=1; i <= Size(&usuarios); i++)
			{
				e2 = Element(&usuarios, i);
				gotoxy(25,20+i);
				printf("U%d", e2.tipoU);
			}

			for(i=1; i <= Size(&clientes); i++)
			{
				e2 = Element(&clientes, i);
				gotoxy(10,20+i);
				printf("C%d", e2.tipoC);
			}
		}
	}
	return;
}

int vacio(int q)
{
	int band1;
	if(q==0)
		band1 = 1;
	else
		band1 = 0;
	return band1;
}
